<Window x:Uid="Window_1" x:Class="Up2dateConsole.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Up2dateConsole"
        xmlns:service="clr-namespace:Up2dateConsole.ServiceReference"
        xmlns:stateindicator="clr-namespace:Up2dateConsole.StateIndicator"
        xmlns:tb="http://www.hardcodet.net/taskbar" 
        xmlns:helpers="clr-namespace:Up2dateConsole.Helpers" xmlns:controls="clr-namespace:Up2dateConsole.Controls"
        mc:Ignorable="d"
        ShowInTaskbar="True"
        Icon="Images/Logo.ico"
        Title="RITMS UP2DATE Console" 
        Height="600" Width="1000"
        MinHeight="300" MinWidth="600"
        WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance local:MainWindowViewModel}">

    <Window.Resources>
        <ResourceDictionary x:Uid="ResourceDictionary_1">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Uid="ResourceDictionary_2" Source="Styles.xaml"/>
                <ResourceDictionary x:Uid="ResourceDictionary_3" Source="Texts.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Uid="Style_1" TargetType="{x:Type Button}">
                <Setter x:Uid="Setter_1" Property="Padding" Value="5,4"/>
                <Setter x:Uid="Setter_2" Property="Margin" Value="3"/>
            </Style>

            <BooleanToVisibilityConverter x:Uid="BooleanToVisibilityConverter_1" x:Key="BooleanToVisibilityConverter"/>
            <helpers:NullToVisibilityConverter x:Uid="helpers:NullToVisibilityConverter_1" x:Key="NullToVisibilityConverter"/>
            <helpers:InvertBooleanToVisibilityConverter x:Uid="helpers:InvertBooleanToVisibilityConverter_1" x:Key="InvertBooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Uid="Grid_1">
        <Grid.RowDefinitions>
            <RowDefinition x:Uid="RowDefinition_1"/>
            <RowDefinition x:Uid="RowDefinition_2" Height="Auto"/>
        </Grid.RowDefinitions>

        <tb:TaskbarIcon x:Uid="tb:TaskbarIcon_1" Visibility="Visible"
                        IconSource="{Binding TaskbarIcon}"
                        MenuActivation="RightClick"
                        LeftClickCommand="{Binding ShowConsoleCommand}"
                        DoubleClickCommand="{Binding ShowConsoleCommand}"
                        ToolTipText="{Binding TaskbarIconText}">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu x:Uid="ContextMenu_1">
                    <MenuItem x:Uid="MenuItem_1" Header="Show console" Command="{Binding ShowConsoleCommand}"/>
                    <Separator x:Uid="Separator_2" Visibility="{Binding IsAdminMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <MenuItem x:Uid="MenuItem_3" Header="Start service" Command="{Binding StartServiceCommand}"
                              Visibility="{Binding IsAdminMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <MenuItem x:Uid="MenuItem_4" Header="Stop service" Command="{Binding StopServiceCommand}"
                              Visibility="{Binding IsAdminMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <MenuItem x:Uid="MenuItem_5" Header="Settings..." Command="{Binding SettingsCommand}"
                              Visibility="{Binding IsAdminMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <MenuItem x:Uid="MenuItem_7" Header="Leave admin mode" Command="{Binding LeaveAdminModeCommand}"
                              Visibility="{Binding IsAdminMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <MenuItem x:Uid="MenuItem_6" Header="To admin mode..." Command="{Binding EnterAdminModeCommand}"
                              Visibility="{Binding IsAdminMode, Converter={StaticResource InvertBooleanToVisibilityConverter}}">
                        <MenuItem.Icon>
                            <Image x:Uid="Image_2" Source="Images/UAC.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator x:Uid="Separator_1"/>
                    <MenuItem x:Uid="MenuItem_2" Header="Quit" Command="{Binding QuitCommand}"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <Grid x:Uid="Grid_2">
            <Grid.RowDefinitions>
                <RowDefinition x:Uid="RowDefinition_3" Height="Auto"/>
                <RowDefinition x:Uid="RowDefinition_4"/>
            </Grid.RowDefinitions>
            <Grid x:Uid="Grid_3" Margin="10,5" >
                <TextBlock x:Uid="TextBlock_1" VerticalAlignment="Center" Text="Software packages:"/>
                <StackPanel x:Uid="StackPanel_1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button x:Uid="Button_5" Width="100" Content="Accept" Command="{Binding AcceptCommand}"
                                ToolTip="Accept installation of the selected package. Installation will start automatically soon after acceptance."
                                Visibility="{Binding CanAcceptReject, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Button x:Uid="Button_4" Width="100" Content="Reject" Command="{Binding RejectCommand}"
                                ToolTip="Reject installation of the selected package."
                                Visibility="{Binding CanAcceptReject, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <StackPanel x:Uid="StackPanel_8" Orientation="Horizontal" VerticalAlignment="Center"
                                Visibility="{Binding IsAdminMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button x:Uid="Button2" Width="100" Content="Install" Command="{Binding InstallCommand}"
                                ToolTip="Install selected package"
                                Visibility="{Binding CanAcceptReject, Converter={StaticResource InvertBooleanToVisibilityConverter}}"/>
                        <Button x:Uid="Button1" ToolTip="Request UP2DATE service authorization data (key is provided by the administrator)"
                            Command="{Binding RequestCertificateCommand}">
                            <StackPanel x:Uid="StackPanel_2" Orientation="Horizontal">
                                <TextBlock x:Uid="TextBlock_2" Text="{StaticResource KeyIcon}" Foreground="DarkOrange" Style="{StaticResource ButtonIcon}"/>
                                <TextBlock x:Uid="TextBlock1" Margin="5,0,0,0" Text="Authorization..." VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        <Button x:Uid="Button_3" Command="{Binding SettingsCommand}" ToolTip="View or change settings">
                            <TextBlock x:Uid="TextBlock_7" Text="{StaticResource wrenchIcon}" Style="{StaticResource ButtonIcon}"/>
                        </Button>
                    </StackPanel>
                    <Button x:Uid="Button_1" Command="{Binding RefreshCommand}" ToolTip="Refresh the list of packages">
                        <TextBlock x:Uid="TextBlock_3" Text="{StaticResource RefreshIcon}" Style="{StaticResource ButtonIcon}"/>
                    </Button>
                </StackPanel>
            </Grid>
            <DataGrid x:Uid="DataGrid_1" Grid.Row="1" Margin="10,0,10,10" 
                        Background="White"
                        SelectionMode="Extended"
                        RowHeight="20"
                        SelectionUnit="FullRow"
                        AutoGenerateColumns="False"
                        GridLinesVisibility="None"
                        CanUserAddRows="False"
                        CanUserDeleteRows="False"
                        CanUserReorderColumns="False"
                        CanUserResizeRows="False"
                        RowHeaderWidth="0"
                        IsReadOnly="True"
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding AvailablePackages}">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Uid="DataGridTextColumn_1" Header="Package" Binding="{Binding Filename}" Width="2*"/>
                    <DataGridTextColumn x:Uid="DataGridTextColumn_2" Header="Product name" Binding="{Binding ProductName}" Width="2*"/>
                    <DataGridTextColumn x:Uid="DataGridTextColumn_3" Header="Publisher" Binding="{Binding Publisher}" Width="1*"/>
                    <DataGridTextColumn x:Uid="DataGridTextColumn_4" Header="Version" Binding="{Binding Version}" MinWidth="80"/>
                    <DataGridTextColumn x:Uid="DataGridTextColumn_5" Header="Size (MB)" Binding="{Binding SizeMb}" MinWidth="60"/>
                    <DataGridTextColumn x:Uid="DataGridTextColumn_6" Header="Installed" Binding="{Binding InstallDate}" MinWidth="80"/>
                    <DataGridTemplateColumn x:Uid="DataGridTextColumn_7" Header="Status" MinWidth="90">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:Uid="DataTemplate_1">
                                <StackPanel x:Uid="StackPanel_7" Orientation="Horizontal">
                                    <TextBlock x:Uid="TextBlock_8" Text="{Binding Status}">
                                        <TextBlock.Style>
                                            <Style x:Uid="Style_4" TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger x:Uid="DataTrigger_3" Binding="{Binding PackageStatus}" Value="{x:Static service:PackageStatus.WaitingForConfirmation}">
                                                        <Setter x:Uid="Setter_8" Property="Foreground" Value="DarkOrange"/>
                                                    </DataTrigger>
                                                    <DataTrigger x:Uid="DataTrigger_4" Binding="{Binding PackageStatus}" Value="{x:Static service:PackageStatus.WaitingForConfirmationForced}">
                                                        <Setter x:Uid="Setter_9" Property="Foreground" Value="DarkOrange"/>
                                                    </DataTrigger>
                                                    <DataTrigger x:Uid="DataTrigger_1" Binding="{Binding PackageStatus}" Value="{x:Static service:PackageStatus.Failed}">
                                                        <Setter x:Uid="Setter_6" Property="Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                    <DataTrigger x:Uid="DataTrigger_2" Binding="{Binding PackageStatus}" Value="{x:Static service:PackageStatus.Installed}">
                                                        <Setter x:Uid="Setter_7" Property="Foreground" Value="Green"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>   
                                    </TextBlock>
                                    <TextBlock x:Uid="TextBlock_9" Margin="8,0,0,0" 
                                               Style="{StaticResource AwesomeIcon}" Foreground="SteelBlue" FontSize="14"
                                               Text="{StaticResource InfoCircleIcon}" 
                                               Visibility="{Binding ExtraInfo, Converter={StaticResource NullToVisibilityConverter}}"
                                               ToolTip="{Binding ExtraInfo}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.Resources>
                    <Style x:Uid="Style_2" TargetType="DataGridCell">
                        <Setter x:Uid="Setter_3" Property="Focusable" Value="False" />
                        <Setter x:Uid="Setter_4" Property="IsTabStop" Value="False" />
                    </Style>
                    <Style x:Uid="Style_3" TargetType="DataGridRow">
                        <Setter x:Uid="Setter_5" Property="IsSelected" Value="{Binding IsSelected}" />
                    </Style>
                </DataGrid.Resources>
            </DataGrid>
        </Grid>

        <Grid x:Uid="Grid_4" Grid.Row="1" Margin="10,0,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Uid="ColumnDefinition_1" Width="Auto"/>
                <ColumnDefinition x:Uid="ColumnDefinition_2" Width="Auto"/>
                <ColumnDefinition x:Uid="ColumnDefinition_3"/>
                <ColumnDefinition x:Uid="ColumnDefinition_4" Width="Auto"/>
                <ColumnDefinition x:Uid="ColumnDefinition_5" Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Uid="TextBlock2" Text="Service state:" VerticalAlignment="Center"/>
            <stateindicator:StateIndicator x:Uid="stateindicator:StateIndicator_1" Grid.Column="1" Width="20" Height="20" Margin="5,0" 
                                           DataContext="{Binding StateIndicator}"/>
            <Grid x:Uid="Grid_5" Grid.Column="2" Margin="15,0,0,0" VerticalAlignment="Center"
                  Visibility="{Binding IsDeviceIdAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Uid="ColumnDefinition_6" Width="Auto"/>
                    <ColumnDefinition x:Uid="ColumnDefinition_7"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Uid="TextBlock_4" Text="Controller Id:" VerticalAlignment="Center"/>
                <controls:SqueezeContentControl x:Uid="controls:ModestContainer_1" Grid.Column="1" Margin="5,0,10,0" HorizontalAlignment="Left">
                    <TextBox x:Uid="TextBox_1" VerticalAlignment="Center"
                             Style="{StaticResource ReadOnlyInfoField}"
                             Text="{Binding DeviceId, Mode=OneWay}"/>
                </controls:SqueezeContentControl>
            </Grid>
            <Button x:Uid="Button_2" Grid.Column="3" ToolTip="Turns console into administration mode (requires administrator privilege)"
                    Command="{Binding EnterAdminModeCommand}"
                    Visibility="{Binding IsUserMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel x:Uid="StackPanel_6" Orientation="Horizontal">
                    <Image x:Uid="Image_1" Stretch="Fill" Width="16" Height="16" Source="Images/UAC.png" VerticalAlignment="Center"/>
                    <TextBlock x:Uid="TextBlock_5" Margin="5,0,0,0" Text="To admin mode..."  VerticalAlignment="Center"/>
                </StackPanel>
            </Button>
            <TextBlock x:Uid="TextBlock_6" Grid.Column="4" Text="Administrator mode" Foreground="DarkRed" FontWeight="DemiBold"
                        Visibility="{Binding IsAdminMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Grid>
    </Grid>
</Window>
